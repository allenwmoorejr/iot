apiVersion: v1
kind: ConfigMap
metadata:
  name: hb-merge-tool
  namespace: suite
data:
  homebridge_config_merge.py: |
    #!/usr/bin/env python3
    import json, sys
    def read_json(path):
        with open(path, "r", encoding="utf-8") as f: return json.load(f)
    def write_json(path, obj):
        with open(path, "w", encoding="utf-8") as f: json.dump(obj, f, indent=2)
    def deep_merge(a, b):
        if isinstance(a, dict) and isinstance(b, dict):
            for k, v in b.items():
                a[k] = deep_merge(a.get(k), v) if k in a else v
            return a
        if isinstance(a, list) and isinstance(b, list):
            return a + [x for x in b if x not in a]
        return b if b is not None else a
    def main():
        import argparse
        p = argparse.ArgumentParser()
        p.add_argument("--config", required=True)
        p.add_argument("--snip", required=True)
        args = p.parse_args()
        cfg = read_json(args.config)
        sn = read_json(args.snip)
        merged = deep_merge(cfg, sn)
        write_json(args.config, merged)
        print("Merged into", args.config)
    if __name__ == "__main__":
        main()
