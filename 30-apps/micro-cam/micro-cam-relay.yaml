apiVersion: apps/v1
kind: Deployment
metadata:
  name: micro-cam-relay
  namespace: suite
  labels: { app: micro-cam-relay }
spec:
  replicas: 1
  selector: { matchLabels: { app: micro-cam-relay } }
  template:
    metadata: { labels: { app: micro-cam-relay } }
    spec:
      nodeSelector:
        kubernetes.io/hostname: m3      # pin to the USB node (optional but tidy)
      containers:
      - name: ffmpeg
        image: lscr.io/linuxserver/ffmpeg:latest
        env:
          - name: SNAP_URL
            value: http://camera-uploader.suite.home.arpa/latest.jpg
        command: ["/bin/sh","-c"]
        args:
          - |
            set -e
            # wait for uploader to serve latest.jpg
            until curl -fsI "$SNAP_URL" >/dev/null; do echo "waiting for $SNAP_URL"; sleep 2; done
            # run forever; restart on error after short nap
            while true; do
              ffmpeg -re -r 5 -f image2 -i "$SNAP_URL" \
                     -vf "fps=5,format=yuv420p" \
                     -f rtsp rtsp://0.0.0.0:8554/porch || true
              echo "ffmpeg exited; retrying in 2s"
              sleep 2
            done
        ports:
          - name: rtsp
            containerPort: 8554
        readinessProbe:
          tcpSocket: { port: 8554 }
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: micro-cam-relay
  namespace: suite
spec:
  selector: { app: micro-cam-relay }
  ports:
    - name: rtsp
      port: 8554
      targetPort: 8554
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRouteTCP
metadata:
  name: micro-cam-relay-tcp
  namespace: suite
spec:
  entryPoints:
    - rtsp
  routes:
    - match: HostSNI(`*`)
      services:
        - name: micro-cam-relay
          port: 8554

